package HadithOntology;

import java.net.URI;
import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class_ HadithBook <br>
 * @version generated on Sun Jan 09 12_58_45 PKT 2022 by amna
 */

public interface HadithBook extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hasChapter
     */
     
    /**
     * Gets all property values for the hasChapter property.<p>
     * 
     * @returns a collection of values for the hasChapter property.
     */
    Collection<? extends HadithChapter> getHasChapter();

    /**
     * Checks if the class has a hasChapter property value.<p>
     * 
     * @return true if there is a hasChapter property value.
     */
    boolean hasHasChapter();

    /**
     * Adds a hasChapter property value.<p>
     * 
     * @param newHasChapter the hasChapter property value to be added
     */
    void addHasChapter(HadithChapter newHasChapter);

    /**
     * Removes a hasChapter property value.<p>
     * 
     * @param oldHasChapter the hasChapter property value to be removed.
     */
    void removeHasChapter(HadithChapter oldHasChapter);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hasHadithType
     */
     
    /**
     * Gets all property values for the hasHadithType property.<p>
     * 
     * @returns a collection of values for the hasHadithType property.
     */
    Collection<? extends HadithType> getHasHadithType();

    /**
     * Checks if the class has a hasHadithType property value.<p>
     * 
     * @return true if there is a hasHadithType property value.
     */
    boolean hasHasHadithType();

    /**
     * Adds a hasHadithType property value.<p>
     * 
     * @param newHasHadithType the hasHadithType property value to be added
     */
    void addHasHadithType(HadithType newHasHadithType);

    /**
     * Removes a hasHadithType property value.<p>
     * 
     * @param oldHasHadithType the hasHadithType property value to be removed.
     */
    void removeHasHadithType(HadithType oldHasHadithType);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hasNarrator
     */
     
    /**
     * Gets all property values for the hasNarrator property.<p>
     * 
     * @returns a collection of values for the hasNarrator property.
     */
    Collection<? extends WrappedIndividual> getHasNarrator();

    /**
     * Checks if the class has a hasNarrator property value.<p>
     * 
     * @return true if there is a hasNarrator property value.
     */
    boolean hasHasNarrator();

    /**
     * Adds a hasNarrator property value.<p>
     * 
     * @param newHasNarrator the hasNarrator property value to be added
     */
    void addHasNarrator(WrappedIndividual newHasNarrator);

    /**
     * Removes a hasNarrator property value.<p>
     * 
     * @param oldHasNarrator the hasNarrator property value to be removed.
     */
    void removeHasNarrator(WrappedIndividual oldHasNarrator);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hasPart
     */
     
    /**
     * Gets all property values for the hasPart property.<p>
     * 
     * @returns a collection of values for the hasPart property.
     */
    Collection<? extends WrappedIndividual> getHasPart();

    /**
     * Checks if the class has a hasPart property value.<p>
     * 
     * @return true if there is a hasPart property value.
     */
    boolean hasHasPart();

    /**
     * Adds a hasPart property value.<p>
     * 
     * @param newHasPart the hasPart property value to be added
     */
    void addHasPart(WrappedIndividual newHasPart);

    /**
     * Removes a hasPart property value.<p>
     * 
     * @param oldHasPart the hasPart property value to be removed.
     */
    void removeHasPart(WrappedIndividual oldHasPart);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hasRootNarrator
     */
     
    /**
     * Gets all property values for the hasRootNarrator property.<p>
     * 
     * @returns a collection of values for the hasRootNarrator property.
     */
    Collection<? extends WrappedIndividual> getHasRootNarrator();

    /**
     * Checks if the class has a hasRootNarrator property value.<p>
     * 
     * @return true if there is a hasRootNarrator property value.
     */
    boolean hasHasRootNarrator();

    /**
     * Adds a hasRootNarrator property value.<p>
     * 
     * @param newHasRootNarrator the hasRootNarrator property value to be added
     */
    void addHasRootNarrator(WrappedIndividual newHasRootNarrator);

    /**
     * Removes a hasRootNarrator property value.<p>
     * 
     * @param oldHasRootNarrator the hasRootNarrator property value to be removed.
     */
    void removeHasRootNarrator(WrappedIndividual oldHasRootNarrator);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hasRootNarratorOccurrence
     */
     
    /**
     * Gets all property values for the hasRootNarratorOccurrence property.<p>
     * 
     * @returns a collection of values for the hasRootNarratorOccurrence property.
     */
    Collection<? extends WrappedIndividual> getHasRootNarratorOccurrence();

    /**
     * Checks if the class has a hasRootNarratorOccurrence property value.<p>
     * 
     * @return true if there is a hasRootNarratorOccurrence property value.
     */
    boolean hasHasRootNarratorOccurrence();

    /**
     * Adds a hasRootNarratorOccurrence property value.<p>
     * 
     * @param newHasRootNarratorOccurrence the hasRootNarratorOccurrence property value to be added
     */
    void addHasRootNarratorOccurrence(WrappedIndividual newHasRootNarratorOccurrence);

    /**
     * Removes a hasRootNarratorOccurrence property value.<p>
     * 
     * @param oldHasRootNarratorOccurrence the hasRootNarratorOccurrence property value to be removed.
     */
    void removeHasRootNarratorOccurrence(WrappedIndividual oldHasRootNarratorOccurrence);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#isPartOf
     */
     
    /**
     * Gets all property values for the isPartOf property.<p>
     * 
     * @returns a collection of values for the isPartOf property.
     */
    Collection<? extends WrappedIndividual> getIsPartOf();

    /**
     * Checks if the class has a isPartOf property value.<p>
     * 
     * @return true if there is a isPartOf property value.
     */
    boolean hasIsPartOf();

    /**
     * Adds a isPartOf property value.<p>
     * 
     * @param newIsPartOf the isPartOf property value to be added
     */
    void addIsPartOf(WrappedIndividual newIsPartOf);

    /**
     * Removes a isPartOf property value.<p>
     * 
     * @param oldIsPartOf the isPartOf property value to be removed.
     */
    void removeIsPartOf(WrappedIndividual oldIsPartOf);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#isPartOfCollection
     */
     
    /**
     * Gets all property values for the isPartOfCollection property.<p>
     * 
     * @returns a collection of values for the isPartOfCollection property.
     */
    Collection<? extends HadithCollection> getIsPartOfCollection();

    /**
     * Checks if the class has a isPartOfCollection property value.<p>
     * 
     * @return true if there is a isPartOfCollection property value.
     */
    boolean hasIsPartOfCollection();

    /**
     * Adds a isPartOfCollection property value.<p>
     * 
     * @param newIsPartOfCollection the isPartOfCollection property value to be added
     */
    void addIsPartOfCollection(HadithCollection newIsPartOfCollection);

    /**
     * Removes a isPartOfCollection property value.<p>
     * 
     * @param oldIsPartOfCollection the isPartOfCollection property value to be removed.
     */
    void removeIsPartOfCollection(HadithCollection oldIsPartOfCollection);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#mentions
     */
     
    /**
     * Gets all property values for the mentions property.<p>
     * 
     * @returns a collection of values for the mentions property.
     */
    Collection<? extends Hadith> getMentions();

    /**
     * Checks if the class has a mentions property value.<p>
     * 
     * @return true if there is a mentions property value.
     */
    boolean hasMentions();

    /**
     * Adds a mentions property value.<p>
     * 
     * @param newMentions the mentions property value to be added
     */
    void addMentions(Hadith newMentions);

    /**
     * Removes a mentions property value.<p>
     * 
     * @param oldMentions the mentions property value to be removed.
     */
    void removeMentions(Hadith oldMentions);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#refersToRootNarrator
     */
     
    /**
     * Gets all property values for the refersToRootNarrator property.<p>
     * 
     * @returns a collection of values for the refersToRootNarrator property.
     */
    Collection<? extends WrappedIndividual> getRefersToRootNarrator();

    /**
     * Checks if the class has a refersToRootNarrator property value.<p>
     * 
     * @return true if there is a refersToRootNarrator property value.
     */
    boolean hasRefersToRootNarrator();

    /**
     * Adds a refersToRootNarrator property value.<p>
     * 
     * @param newRefersToRootNarrator the refersToRootNarrator property value to be added
     */
    void addRefersToRootNarrator(WrappedIndividual newRefersToRootNarrator);

    /**
     * Removes a refersToRootNarrator property value.<p>
     * 
     * @param oldRefersToRootNarrator the refersToRootNarrator property value to be removed.
     */
    void removeRefersToRootNarrator(WrappedIndividual oldRefersToRootNarrator);


    /* ***************************************************
     * Property http://www.w3.org/1999/02/22-rdf-syntax-ns#seeAlso
     */
     
    /**
     * Gets all property values for the rdf_seeAlso property.<p>
     * 
     * @returns a collection of values for the rdf_seeAlso property.
     */
    Collection<? extends WrappedIndividual> getRdf_seeAlso();

    /**
     * Checks if the class has a rdf_seeAlso property value.<p>
     * 
     * @return true if there is a rdf_seeAlso property value.
     */
    boolean hasRdf_seeAlso();

    /**
     * Adds a rdf_seeAlso property value.<p>
     * 
     * @param newRdf_seeAlso the rdf_seeAlso property value to be added
     */
    void addRdf_seeAlso(WrappedIndividual newRdf_seeAlso);

    /**
     * Removes a rdf_seeAlso property value.<p>
     * 
     * @param oldRdf_seeAlso the rdf_seeAlso property value to be removed.
     */
    void removeRdf_seeAlso(WrappedIndividual oldRdf_seeAlso);


    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#attribute
     */
     
    /**
     * Gets all property values for the attribute property.<p>
     * 
     * @returns a collection of values for the attribute property.
     */
    Collection<? extends Object> getAttribute();

    /**
     * Checks if the class has a attribute property value.<p>
     * 
     * @return true if there is a attribute property value.
     */
    boolean hasAttribute();

    /**
     * Adds a attribute property value.<p>
     * 
     * @param newAttribute the attribute property value to be added
     */
    void addAttribute(Object newAttribute);

    /**
     * Removes a attribute property value.<p>
     * 
     * @param oldAttribute the attribute property value to be removed.
     */
    void removeAttribute(Object oldAttribute);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#birthPlace
     */
     
    /**
     * Gets all property values for the birthPlace property.<p>
     * 
     * @returns a collection of values for the birthPlace property.
     */
    Collection<? extends Object> getBirthPlace();

    /**
     * Checks if the class has a birthPlace property value.<p>
     * 
     * @return true if there is a birthPlace property value.
     */
    boolean hasBirthPlace();

    /**
     * Adds a birthPlace property value.<p>
     * 
     * @param newBirthPlace the birthPlace property value to be added
     */
    void addBirthPlace(Object newBirthPlace);

    /**
     * Removes a birthPlace property value.<p>
     * 
     * @param oldBirthPlace the birthPlace property value to be removed.
     */
    void removeBirthPlace(Object oldBirthPlace);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#birthYear
     */
     
    /**
     * Gets all property values for the birthYear property.<p>
     * 
     * @returns a collection of values for the birthYear property.
     */
    Collection<? extends Object> getBirthYear();

    /**
     * Checks if the class has a birthYear property value.<p>
     * 
     * @return true if there is a birthYear property value.
     */
    boolean hasBirthYear();

    /**
     * Adds a birthYear property value.<p>
     * 
     * @param newBirthYear the birthYear property value to be added
     */
    void addBirthYear(Object newBirthYear);

    /**
     * Removes a birthYear property value.<p>
     * 
     * @param oldBirthYear the birthYear property value to be removed.
     */
    void removeBirthYear(Object oldBirthYear);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#chapterNo
     */
     
    /**
     * Gets all property values for the chapterNo property.<p>
     * 
     * @returns a collection of values for the chapterNo property.
     */
    Collection<? extends Object> getChapterNo();

    /**
     * Checks if the class has a chapterNo property value.<p>
     * 
     * @return true if there is a chapterNo property value.
     */
    boolean hasChapterNo();

    /**
     * Adds a chapterNo property value.<p>
     * 
     * @param newChapterNo the chapterNo property value to be added
     */
    void addChapterNo(Object newChapterNo);

    /**
     * Removes a chapterNo property value.<p>
     * 
     * @param oldChapterNo the chapterNo property value to be removed.
     */
    void removeChapterNo(Object oldChapterNo);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#chapterPreface
     */
     
    /**
     * Gets all property values for the chapterPreface property.<p>
     * 
     * @returns a collection of values for the chapterPreface property.
     */
    Collection<? extends Object> getChapterPreface();

    /**
     * Checks if the class has a chapterPreface property value.<p>
     * 
     * @return true if there is a chapterPreface property value.
     */
    boolean hasChapterPreface();

    /**
     * Adds a chapterPreface property value.<p>
     * 
     * @param newChapterPreface the chapterPreface property value to be added
     */
    void addChapterPreface(Object newChapterPreface);

    /**
     * Removes a chapterPreface property value.<p>
     * 
     * @param oldChapterPreface the chapterPreface property value to be removed.
     */
    void removeChapterPreface(Object oldChapterPreface);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#collectionName
     */
     
    /**
     * Gets all property values for the collectionName property.<p>
     * 
     * @returns a collection of values for the collectionName property.
     */
    Collection<? extends Object> getCollectionName();

    /**
     * Checks if the class has a collectionName property value.<p>
     * 
     * @return true if there is a collectionName property value.
     */
    boolean hasCollectionName();

    /**
     * Adds a collectionName property value.<p>
     * 
     * @param newCollectionName the collectionName property value to be added
     */
    void addCollectionName(Object newCollectionName);

    /**
     * Removes a collectionName property value.<p>
     * 
     * @param oldCollectionName the collectionName property value to be removed.
     */
    void removeCollectionName(Object oldCollectionName);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#concealment
     */
     
    /**
     * Gets all property values for the concealment property.<p>
     * 
     * @returns a collection of values for the concealment property.
     */
    Collection<? extends Object> getConcealment();

    /**
     * Checks if the class has a concealment property value.<p>
     * 
     * @return true if there is a concealment property value.
     */
    boolean hasConcealment();

    /**
     * Adds a concealment property value.<p>
     * 
     * @param newConcealment the concealment property value to be added
     */
    void addConcealment(Object newConcealment);

    /**
     * Removes a concealment property value.<p>
     * 
     * @param oldConcealment the concealment property value to be removed.
     */
    void removeConcealment(Object oldConcealment);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#deathPlace
     */
     
    /**
     * Gets all property values for the deathPlace property.<p>
     * 
     * @returns a collection of values for the deathPlace property.
     */
    Collection<? extends Object> getDeathPlace();

    /**
     * Checks if the class has a deathPlace property value.<p>
     * 
     * @return true if there is a deathPlace property value.
     */
    boolean hasDeathPlace();

    /**
     * Adds a deathPlace property value.<p>
     * 
     * @param newDeathPlace the deathPlace property value to be added
     */
    void addDeathPlace(Object newDeathPlace);

    /**
     * Removes a deathPlace property value.<p>
     * 
     * @param oldDeathPlace the deathPlace property value to be removed.
     */
    void removeDeathPlace(Object oldDeathPlace);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#deathYear
     */
     
    /**
     * Gets all property values for the deathYear property.<p>
     * 
     * @returns a collection of values for the deathYear property.
     */
    Collection<? extends Object> getDeathYear();

    /**
     * Checks if the class has a deathYear property value.<p>
     * 
     * @return true if there is a deathYear property value.
     */
    boolean hasDeathYear();

    /**
     * Adds a deathYear property value.<p>
     * 
     * @param newDeathYear the deathYear property value to be added
     */
    void addDeathYear(Object newDeathYear);

    /**
     * Removes a deathYear property value.<p>
     * 
     * @param oldDeathYear the deathYear property value to be removed.
     */
    void removeDeathYear(Object oldDeathYear);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#engBookNo
     */
     
    /**
     * Gets all property values for the engBookNo property.<p>
     * 
     * @returns a collection of values for the engBookNo property.
     */
    Collection<? extends Object> getEngBookNo();

    /**
     * Checks if the class has a engBookNo property value.<p>
     * 
     * @return true if there is a engBookNo property value.
     */
    boolean hasEngBookNo();

    /**
     * Adds a engBookNo property value.<p>
     * 
     * @param newEngBookNo the engBookNo property value to be added
     */
    void addEngBookNo(Object newEngBookNo);

    /**
     * Removes a engBookNo property value.<p>
     * 
     * @param oldEngBookNo the engBookNo property value to be removed.
     */
    void removeEngBookNo(Object oldEngBookNo);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#engHadithNo
     */
     
    /**
     * Gets all property values for the engHadithNo property.<p>
     * 
     * @returns a collection of values for the engHadithNo property.
     */
    Collection<? extends Object> getEngHadithNo();

    /**
     * Checks if the class has a engHadithNo property value.<p>
     * 
     * @return true if there is a engHadithNo property value.
     */
    boolean hasEngHadithNo();

    /**
     * Adds a engHadithNo property value.<p>
     * 
     * @param newEngHadithNo the engHadithNo property value to be added
     */
    void addEngHadithNo(Object newEngHadithNo);

    /**
     * Removes a engHadithNo property value.<p>
     * 
     * @param oldEngHadithNo the engHadithNo property value to be removed.
     */
    void removeEngHadithNo(Object oldEngHadithNo);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#engVolNo
     */
     
    /**
     * Gets all property values for the engVolNo property.<p>
     * 
     * @returns a collection of values for the engVolNo property.
     */
    Collection<? extends Object> getEngVolNo();

    /**
     * Checks if the class has a engVolNo property value.<p>
     * 
     * @return true if there is a engVolNo property value.
     */
    boolean hasEngVolNo();

    /**
     * Adds a engVolNo property value.<p>
     * 
     * @param newEngVolNo the engVolNo property value to be added
     */
    void addEngVolNo(Object newEngVolNo);

    /**
     * Removes a engVolNo property value.<p>
     * 
     * @param oldEngVolNo the engVolNo property value to be removed.
     */
    void removeEngVolNo(Object oldEngVolNo);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#englishReference
     */
     
    /**
     * Gets all property values for the englishReference property.<p>
     * 
     * @returns a collection of values for the englishReference property.
     */
    Collection<? extends Object> getEnglishReference();

    /**
     * Checks if the class has a englishReference property value.<p>
     * 
     * @return true if there is a englishReference property value.
     */
    boolean hasEnglishReference();

    /**
     * Adds a englishReference property value.<p>
     * 
     * @param newEnglishReference the englishReference property value to be added
     */
    void addEnglishReference(Object newEnglishReference);

    /**
     * Removes a englishReference property value.<p>
     * 
     * @param oldEnglishReference the englishReference property value to be removed.
     */
    void removeEnglishReference(Object oldEnglishReference);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#firstChar
     */
     
    /**
     * Gets all property values for the firstChar property.<p>
     * 
     * @returns a collection of values for the firstChar property.
     */
    Collection<? extends Object> getFirstChar();

    /**
     * Checks if the class has a firstChar property value.<p>
     * 
     * @return true if there is a firstChar property value.
     */
    boolean hasFirstChar();

    /**
     * Adds a firstChar property value.<p>
     * 
     * @param newFirstChar the firstChar property value to be added
     */
    void addFirstChar(Object newFirstChar);

    /**
     * Removes a firstChar property value.<p>
     * 
     * @param oldFirstChar the firstChar property value to be removed.
     */
    void removeFirstChar(Object oldFirstChar);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#fullHadithText
     */
     
    /**
     * Gets all property values for the fullHadithText property.<p>
     * 
     * @returns a collection of values for the fullHadithText property.
     */
    Collection<? extends Object> getFullHadithText();

    /**
     * Checks if the class has a fullHadithText property value.<p>
     * 
     * @return true if there is a fullHadithText property value.
     */
    boolean hasFullHadithText();

    /**
     * Adds a fullHadithText property value.<p>
     * 
     * @param newFullHadithText the fullHadithText property value to be added
     */
    void addFullHadithText(Object newFullHadithText);

    /**
     * Removes a fullHadithText property value.<p>
     * 
     * @param oldFullHadithText the fullHadithText property value to be removed.
     */
    void removeFullHadithText(Object oldFullHadithText);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#generation
     */
     
    /**
     * Gets all property values for the generation property.<p>
     * 
     * @returns a collection of values for the generation property.
     */
    Collection<? extends Object> getGeneration();

    /**
     * Checks if the class has a generation property value.<p>
     * 
     * @return true if there is a generation property value.
     */
    boolean hasGeneration();

    /**
     * Adds a generation property value.<p>
     * 
     * @param newGeneration the generation property value to be added
     */
    void addGeneration(Object newGeneration);

    /**
     * Removes a generation property value.<p>
     * 
     * @param oldGeneration the generation property value to be removed.
     */
    void removeGeneration(Object oldGeneration);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hadithBookIntro
     */
     
    /**
     * Gets all property values for the hadithBookIntro property.<p>
     * 
     * @returns a collection of values for the hadithBookIntro property.
     */
    Collection<? extends Object> getHadithBookIntro();

    /**
     * Checks if the class has a hadithBookIntro property value.<p>
     * 
     * @return true if there is a hadithBookIntro property value.
     */
    boolean hasHadithBookIntro();

    /**
     * Adds a hadithBookIntro property value.<p>
     * 
     * @param newHadithBookIntro the hadithBookIntro property value to be added
     */
    void addHadithBookIntro(Object newHadithBookIntro);

    /**
     * Removes a hadithBookIntro property value.<p>
     * 
     * @param oldHadithBookIntro the hadithBookIntro property value to be removed.
     */
    void removeHadithBookIntro(Object oldHadithBookIntro);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hadithBookNo
     */
     
    /**
     * Gets all property values for the hadithBookNo property.<p>
     * 
     * @returns a collection of values for the hadithBookNo property.
     */
    Collection<? extends Object> getHadithBookNo();

    /**
     * Checks if the class has a hadithBookNo property value.<p>
     * 
     * @return true if there is a hadithBookNo property value.
     */
    boolean hasHadithBookNo();

    /**
     * Adds a hadithBookNo property value.<p>
     * 
     * @param newHadithBookNo the hadithBookNo property value to be added
     */
    void addHadithBookNo(Object newHadithBookNo);

    /**
     * Removes a hadithBookNo property value.<p>
     * 
     * @param oldHadithBookNo the hadithBookNo property value to be removed.
     */
    void removeHadithBookNo(Object oldHadithBookNo);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hadithChapterNo
     */
     
    /**
     * Gets all property values for the hadithChapterNo property.<p>
     * 
     * @returns a collection of values for the hadithChapterNo property.
     */
    Collection<? extends Object> getHadithChapterNo();

    /**
     * Checks if the class has a hadithChapterNo property value.<p>
     * 
     * @return true if there is a hadithChapterNo property value.
     */
    boolean hasHadithChapterNo();

    /**
     * Adds a hadithChapterNo property value.<p>
     * 
     * @param newHadithChapterNo the hadithChapterNo property value to be added
     */
    void addHadithChapterNo(Object newHadithChapterNo);

    /**
     * Removes a hadithChapterNo property value.<p>
     * 
     * @param oldHadithChapterNo the hadithChapterNo property value to be removed.
     */
    void removeHadithChapterNo(Object oldHadithChapterNo);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hadithGrade
     */
     
    /**
     * Gets all property values for the hadithGrade property.<p>
     * 
     * @returns a collection of values for the hadithGrade property.
     */
    Collection<? extends Object> getHadithGrade();

    /**
     * Checks if the class has a hadithGrade property value.<p>
     * 
     * @return true if there is a hadithGrade property value.
     */
    boolean hasHadithGrade();

    /**
     * Adds a hadithGrade property value.<p>
     * 
     * @param newHadithGrade the hadithGrade property value to be added
     */
    void addHadithGrade(Object newHadithGrade);

    /**
     * Removes a hadithGrade property value.<p>
     * 
     * @param oldHadithGrade the hadithGrade property value to be removed.
     */
    void removeHadithGrade(Object oldHadithGrade);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hadithReferenceNo
     */
     
    /**
     * Gets all property values for the hadithReferenceNo property.<p>
     * 
     * @returns a collection of values for the hadithReferenceNo property.
     */
    Collection<? extends Object> getHadithReferenceNo();

    /**
     * Checks if the class has a hadithReferenceNo property value.<p>
     * 
     * @return true if there is a hadithReferenceNo property value.
     */
    boolean hasHadithReferenceNo();

    /**
     * Adds a hadithReferenceNo property value.<p>
     * 
     * @param newHadithReferenceNo the hadithReferenceNo property value to be added
     */
    void addHadithReferenceNo(Object newHadithReferenceNo);

    /**
     * Removes a hadithReferenceNo property value.<p>
     * 
     * @param oldHadithReferenceNo the hadithReferenceNo property value to be removed.
     */
    void removeHadithReferenceNo(Object oldHadithReferenceNo);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hadithType
     */
     
    /**
     * Gets all property values for the hadithType property.<p>
     * 
     * @returns a collection of values for the hadithType property.
     */
    Collection<? extends Object> getHadithType();

    /**
     * Checks if the class has a hadithType property value.<p>
     * 
     * @return true if there is a hadithType property value.
     */
    boolean hasHadithType();

    /**
     * Adds a hadithType property value.<p>
     * 
     * @param newHadithType the hadithType property value to be added
     */
    void addHadithType(Object newHadithType);

    /**
     * Removes a hadithType property value.<p>
     * 
     * @param oldHadithType the hadithType property value to be removed.
     */
    void removeHadithType(Object oldHadithType);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hadithURL
     */
     
    /**
     * Gets all property values for the hadithURL property.<p>
     * 
     * @returns a collection of values for the hadithURL property.
     */
    Collection<? extends Object> getHadithURL();

    /**
     * Checks if the class has a hadithURL property value.<p>
     * 
     * @return true if there is a hadithURL property value.
     */
    boolean hasHadithURL();

    /**
     * Adds a hadithURL property value.<p>
     * 
     * @param newHadithURL the hadithURL property value to be added
     */
    void addHadithURL(Object newHadithURL);

    /**
     * Removes a hadithURL property value.<p>
     * 
     * @param oldHadithURL the hadithURL property value to be removed.
     */
    void removeHadithURL(Object oldHadithURL);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#hasMaster
     */
     
    /**
     * Gets all property values for the hasMaster property.<p>
     * 
     * @returns a collection of values for the hasMaster property.
     */
    Collection<? extends Object> getHasMaster();

    /**
     * Checks if the class has a hasMaster property value.<p>
     * 
     * @return true if there is a hasMaster property value.
     */
    boolean hasHasMaster();

    /**
     * Adds a hasMaster property value.<p>
     * 
     * @param newHasMaster the hasMaster property value to be added
     */
    void addHasMaster(Object newHasMaster);

    /**
     * Removes a hasMaster property value.<p>
     * 
     * @param oldHasMaster the hasMaster property value to be removed.
     */
    void removeHasMaster(Object oldHasMaster);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#lineage
     */
     
    /**
     * Gets all property values for the lineage property.<p>
     * 
     * @returns a collection of values for the lineage property.
     */
    Collection<? extends Object> getLineage();

    /**
     * Checks if the class has a lineage property value.<p>
     * 
     * @return true if there is a lineage property value.
     */
    boolean hasLineage();

    /**
     * Adds a lineage property value.<p>
     * 
     * @param newLineage the lineage property value to be added
     */
    void addLineage(Object newLineage);

    /**
     * Removes a lineage property value.<p>
     * 
     * @param oldLineage the lineage property value to be removed.
     */
    void removeLineage(Object oldLineage);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#name
     */
     
    /**
     * Gets all property values for the name property.<p>
     * 
     * @returns a collection of values for the name property.
     */
    Collection<? extends Object> getName();

    /**
     * Checks if the class has a name property value.<p>
     * 
     * @return true if there is a name property value.
     */
    boolean hasName();

    /**
     * Adds a name property value.<p>
     * 
     * @param newName the name property value to be added
     */
    void addName(Object newName);

    /**
     * Removes a name property value.<p>
     * 
     * @param oldName the name property value to be removed.
     */
    void removeName(Object oldName);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#narratorChain
     */
     
    /**
     * Gets all property values for the narratorChain property.<p>
     * 
     * @returns a collection of values for the narratorChain property.
     */
    Collection<? extends Object> getNarratorChain();

    /**
     * Checks if the class has a narratorChain property value.<p>
     * 
     * @return true if there is a narratorChain property value.
     */
    boolean hasNarratorChain();

    /**
     * Adds a narratorChain property value.<p>
     * 
     * @param newNarratorChain the narratorChain property value to be added
     */
    void addNarratorChain(Object newNarratorChain);

    /**
     * Removes a narratorChain property value.<p>
     * 
     * @param oldNarratorChain the narratorChain property value to be removed.
     */
    void removeNarratorChain(Object oldNarratorChain);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#narratorID
     */
     
    /**
     * Gets all property values for the narratorID property.<p>
     * 
     * @returns a collection of values for the narratorID property.
     */
    Collection<? extends Object> getNarratorID();

    /**
     * Checks if the class has a narratorID property value.<p>
     * 
     * @return true if there is a narratorID property value.
     */
    boolean hasNarratorID();

    /**
     * Adds a narratorID property value.<p>
     * 
     * @param newNarratorID the narratorID property value to be added
     */
    void addNarratorID(Object newNarratorID);

    /**
     * Removes a narratorID property value.<p>
     * 
     * @param oldNarratorID the narratorID property value to be removed.
     */
    void removeNarratorID(Object oldNarratorID);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#narratorURL
     */
     
    /**
     * Gets all property values for the narratorURL property.<p>
     * 
     * @returns a collection of values for the narratorURL property.
     */
    Collection<? extends Object> getNarratorURL();

    /**
     * Checks if the class has a narratorURL property value.<p>
     * 
     * @return true if there is a narratorURL property value.
     */
    boolean hasNarratorURL();

    /**
     * Adds a narratorURL property value.<p>
     * 
     * @param newNarratorURL the narratorURL property value to be added
     */
    void addNarratorURL(Object newNarratorURL);

    /**
     * Removes a narratorURL property value.<p>
     * 
     * @param oldNarratorURL the narratorURL property value to be removed.
     */
    void removeNarratorURL(Object oldNarratorURL);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#office
     */
     
    /**
     * Gets all property values for the office property.<p>
     * 
     * @returns a collection of values for the office property.
     */
    Collection<? extends Object> getOffice();

    /**
     * Checks if the class has a office property value.<p>
     * 
     * @return true if there is a office property value.
     */
    boolean hasOffice();

    /**
     * Adds a office property value.<p>
     * 
     * @param newOffice the office property value to be added
     */
    void addOffice(Object newOffice);

    /**
     * Removes a office property value.<p>
     * 
     * @param oldOffice the office property value to be removed.
     */
    void removeOffice(Object oldOffice);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#popularName
     */
     
    /**
     * Gets all property values for the popularName property.<p>
     * 
     * @returns a collection of values for the popularName property.
     */
    Collection<? extends Object> getPopularName();

    /**
     * Checks if the class has a popularName property value.<p>
     * 
     * @return true if there is a popularName property value.
     */
    boolean hasPopularName();

    /**
     * Adds a popularName property value.<p>
     * 
     * @param newPopularName the popularName property value to be added
     */
    void addPopularName(Object newPopularName);

    /**
     * Removes a popularName property value.<p>
     * 
     * @param oldPopularName the popularName property value to be removed.
     */
    void removePopularName(Object oldPopularName);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#rank
     */
     
    /**
     * Gets all property values for the rank property.<p>
     * 
     * @returns a collection of values for the rank property.
     */
    Collection<? extends Object> getRank();

    /**
     * Checks if the class has a rank property value.<p>
     * 
     * @return true if there is a rank property value.
     */
    boolean hasRank();

    /**
     * Adds a rank property value.<p>
     * 
     * @param newRank the rank property value to be added
     */
    void addRank(Object newRank);

    /**
     * Removes a rank property value.<p>
     * 
     * @param oldRank the rank property value to be removed.
     */
    void removeRank(Object oldRank);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#residence
     */
     
    /**
     * Gets all property values for the residence property.<p>
     * 
     * @returns a collection of values for the residence property.
     */
    Collection<? extends Object> getResidence();

    /**
     * Checks if the class has a residence property value.<p>
     * 
     * @return true if there is a residence property value.
     */
    boolean hasResidence();

    /**
     * Adds a residence property value.<p>
     * 
     * @param newResidence the residence property value to be added
     */
    void addResidence(Object newResidence);

    /**
     * Removes a residence property value.<p>
     * 
     * @param oldResidence the residence property value to be removed.
     */
    void removeResidence(Object oldResidence);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#schoolOfThought
     */
     
    /**
     * Gets all property values for the schoolOfThought property.<p>
     * 
     * @returns a collection of values for the schoolOfThought property.
     */
    Collection<? extends Object> getSchoolOfThought();

    /**
     * Checks if the class has a schoolOfThought property value.<p>
     * 
     * @return true if there is a schoolOfThought property value.
     */
    boolean hasSchoolOfThought();

    /**
     * Adds a schoolOfThought property value.<p>
     * 
     * @param newSchoolOfThought the schoolOfThought property value to be added
     */
    void addSchoolOfThought(Object newSchoolOfThought);

    /**
     * Removes a schoolOfThought property value.<p>
     * 
     * @param oldSchoolOfThought the schoolOfThought property value to be removed.
     */
    void removeSchoolOfThought(Object oldSchoolOfThought);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#sequenceNo
     */
     
    /**
     * Gets all property values for the sequenceNo property.<p>
     * 
     * @returns a collection of values for the sequenceNo property.
     */
    Collection<? extends Object> getSequenceNo();

    /**
     * Checks if the class has a sequenceNo property value.<p>
     * 
     * @return true if there is a sequenceNo property value.
     */
    boolean hasSequenceNo();

    /**
     * Adds a sequenceNo property value.<p>
     * 
     * @param newSequenceNo the sequenceNo property value to be added
     */
    void addSequenceNo(Object newSequenceNo);

    /**
     * Removes a sequenceNo property value.<p>
     * 
     * @param oldSequenceNo the sequenceNo property value to be removed.
     */
    void removeSequenceNo(Object oldSequenceNo);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#teknonym
     */
     
    /**
     * Gets all property values for the teknonym property.<p>
     * 
     * @returns a collection of values for the teknonym property.
     */
    Collection<? extends Object> getTeknonym();

    /**
     * Checks if the class has a teknonym property value.<p>
     * 
     * @return true if there is a teknonym property value.
     */
    boolean hasTeknonym();

    /**
     * Adds a teknonym property value.<p>
     * 
     * @param newTeknonym the teknonym property value to be added
     */
    void addTeknonym(Object newTeknonym);

    /**
     * Removes a teknonym property value.<p>
     * 
     * @param oldTeknonym the teknonym property value to be removed.
     */
    void removeTeknonym(Object oldTeknonym);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#title
     */
     
    /**
     * Gets all property values for the title property.<p>
     * 
     * @returns a collection of values for the title property.
     */
    Collection<? extends Object> getTitle();

    /**
     * Checks if the class has a title property value.<p>
     * 
     * @return true if there is a title property value.
     */
    boolean hasTitle();

    /**
     * Adds a title property value.<p>
     * 
     * @param newTitle the title property value to be added
     */
    void addTitle(Object newTitle);

    /**
     * Removes a title property value.<p>
     * 
     * @param oldTitle the title property value to be removed.
     */
    void removeTitle(Object oldTitle);



    /* ***************************************************
     * Property http://www.lodislamica.me/ontology/hadithVoc#verseNo
     */
     
    /**
     * Gets all property values for the verseNo property.<p>
     * 
     * @returns a collection of values for the verseNo property.
     */
    Collection<? extends Object> getVerseNo();

    /**
     * Checks if the class has a verseNo property value.<p>
     * 
     * @return true if there is a verseNo property value.
     */
    boolean hasVerseNo();

    /**
     * Adds a verseNo property value.<p>
     * 
     * @param newVerseNo the verseNo property value to be added
     */
    void addVerseNo(Object newVerseNo);

    /**
     * Removes a verseNo property value.<p>
     * 
     * @param oldVerseNo the verseNo property value to be removed.
     */
    void removeVerseNo(Object oldVerseNo);



    /* ***************************************************
     * Property http://www.w3.org/2000/01/rdf-schema#label
     */
     
    /**
     * Gets all property values for the rdfs_label property.<p>
     * 
     * @returns a collection of values for the rdfs_label property.
     */
    Collection<? extends Object> getRdfs_label();

    /**
     * Checks if the class has a rdfs_label property value.<p>
     * 
     * @return true if there is a rdfs_label property value.
     */
    boolean hasRdfs_label();

    /**
     * Adds a rdfs_label property value.<p>
     * 
     * @param newRdfs_label the rdfs_label property value to be added
     */
    void addRdfs_label(Object newRdfs_label);

    /**
     * Removes a rdfs_label property value.<p>
     * 
     * @param oldRdfs_label the rdfs_label property value to be removed.
     */
    void removeRdfs_label(Object oldRdfs_label);



    /* ***************************************************
     * Property http://www.w3.org/2002/07/owl#sameAs
     */
     
    /**
     * Gets all property values for the owl_sameAs property.<p>
     * 
     * @returns a collection of values for the owl_sameAs property.
     */
    Collection<? extends Object> getOwl_sameAs();

    /**
     * Checks if the class has a owl_sameAs property value.<p>
     * 
     * @return true if there is a owl_sameAs property value.
     */
    boolean hasOwl_sameAs();

    /**
     * Adds a owl_sameAs property value.<p>
     * 
     * @param newOwl_sameAs the owl_sameAs property value to be added
     */
    void addOwl_sameAs(Object newOwl_sameAs);

    /**
     * Removes a owl_sameAs property value.<p>
     * 
     * @param oldOwl_sameAs the owl_sameAs property value to be removed.
     */
    void removeOwl_sameAs(Object oldOwl_sameAs);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
